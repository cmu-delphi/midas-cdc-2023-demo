---
format:
  revealjs:
    footer: "Packages for forecasting --- [cmu-delphi.github.io/midas-cdc-2023-demo]{.smaller}"
    logo: "gfx/delphi.jpg"
    embed-resources: false
    chalkboard: true
    width: 1280
    height: 720
    theme: [default, themer.scss]
    fig-format: svg
    html-math-method: mathjax
execute:
  cache: true
editor: source
---


##  Finding, fetching, and processing epidemiological data with `{epidatr}` and `{epiprocess}`

<br>

#### Logan C. Brooks
#### and CMU's Delphi Group

Forecasting Tooling for CDC and MIDAS --- 21 November 2023


## `{epidatr}`

```{r}
#| include: false

# setup
pak::pkg_install("epidatr")
library(epidatr)
library(dplyr)
```


## The [Delphi `{epidatr}` package](https://cmu-delphi.github.io/epidatr/) is a new R front-end for the [Delphi Epidata API](https://cmu-delphi.github.io/delphi-epidata/)

This package is designed to streamline the downloading and usage of data from the [Delphi Epidata
API](https://cmu-delphi.github.io/delphi-epidata/). It provides a simple R interface to the API, including functions for downloading data, parsing the results, and converting the data into a tidy format.

The API provides real-time access to epidemiological surveillance data for influenza, COVID-19, and other diseases, both from official government sources such as the [CDC](https://www.cdc.gov/datastatistics/index.html) and from private partners. The API stores a historical record of all data, including corrections and updates, which is particularly useful for accurately backtesting forecasting models.


## The `{epidatr}` package is a complete rewrite of the [`{covidcast}` package](https://cmu-delphi.github.io/covidcast/covidcastR/), with a focus on speed, reliability, and ease of use.

The covidcast package is deprecated and will no longer be updated.


## Installation

You can install the stable version of this package from CRAN:

```{r}
#| eval: false
#| echo: true
install.packages("epidatr")
pak::pkg_install("epidatr")
renv::install("epidatr")
```

Or if you want the development version, install from GitHub:

```{r}
#| eval: false
#| echo: true
pak::pkg_install("cmu-delphi/epidatr")
remotes::install_github("cmu-delphi/epidatr")
renv::install("cmu-delphi/epidatr")
```

## The Delphi API requires a (free) API key for full functionality

To generate your key, [register](https://api.delphi.cmu.edu/epidata/admin/registration_form) 
for a pseudo-anonymous account; see more
discussion on the [general API
website](https://cmu-delphi.github.io/delphi-epidata/api/api_keys.html).

<br>

```{r}
#| eval: false
#| echo: true
set_api_key("personalkey")
```

<br>

::: {style="font-size: 75%;"}

Note: the private endpoints (those prefixed with `pvt_`) require a
separate key to be passed as an argument. These endpoints require
data use agreements to access.

:::


## Accessing HHS data

```{r}
#| echo: true
#| eval: false
# Obtain 7-day average of confirmed COVID-19 hospital admissions from the
# Department of Health & Human Services for the US
epidata <- pub_covidcast(
  source = "hhs",
  signals = "confirmed_admissions_covid_1d_7dav",
  geo_type = "nation",
  time_type = "day",
  geo_values = "us",
  time_values = epirange(20230101, 20230601)
)
epidata
```

```{r}
#| echo: false
#| eval: true
# Obtain 7-day average of confirmed COVID-19 hospital admissions from the
# Department of Health & Human Services for the US
epidata <- pub_covidcast(
  source = "hhs",
  signals = "confirmed_admissions_covid_1d_7dav",
  geo_type = "nation",
  time_type = "day",
  geo_values = "us",
  time_values = epirange(20230101, 20230601)
)
epidata %>% select(geo_value, signal, source, geo_type, time_type, time_value, issue, lag, value, everything())
```

## Commonly-accessed data sources



## Other useful data sources

Exclusive data including `chng` and `doctor-visits`


## Other endpoints: More than just COVID data!


```{r}
#| eval: false
#| echo: true
avail_endpoints()
```

```{r}
#| eval: true
#| echo: false
invisible(capture.output(endpts <- avail_endpoints()))
endpts %>% filter(startsWith(Endpoint, "pub_"), !startsWith(Endpoint, "pub_covid"))
```


